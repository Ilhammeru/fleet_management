name: Fleet Manager Workflow
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  Build-asset:
    if: github.event_name == 'pull_request'
    name: Running Check
    runs-on: ubuntu-latest
    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          composer dump-autoload

      - name: Generate key
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

  Deploying:
    if: github.event_name == 'push'
    name: Deploying to server
    runs-on: ubuntu-latest
    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          composer dump-autoload

      - name: Generate key
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          check-latest: false

      - name: Build project
        run: |
          npm install
          npm run prod

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          server-dir: ./fleet.kintech.my.id/
          exclude: |
            **/vendor/**
            **/node_modules/**
            **/public/assets/plugins/**
            **/storage/*.key
            **/storage/framework/cache/**
